/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { FundMe, FundMeInterface } from "../../contracts/FundMe";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "priceFeedAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FundMe__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "MINIMUM_USD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cheaperWithdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "i_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "s_addressToAmountFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_funders",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_priceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200129138038062001291833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61110b62000186600039600081816101e6015281816105ad015281816107a3015261083b015261110b6000f3fe60806040526004361061007b5760003560e01c80636b69a5921161004e5780636b69a5921461013c578063b60d428814610167578063be2693f014610171578063dba6335f1461017b5761007b565b80630ec3b027146100805780631bf6132d146100ab5780633ccfd60b146100e857806354861af7146100ff575b600080fd5b34801561008c57600080fd5b506100956101a6565b6040516100a29190610a5f565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610abd565b6101cc565b6040516100df9190610b03565b60405180910390f35b3480156100f457600080fd5b506100fd6101e4565b005b34801561010b57600080fd5b5061012660048036038101906101219190610b4a565b610424565b6040516101339190610b86565b60405180910390f35b34801561014857600080fd5b50610151610463565b60405161015e9190610b03565b60405180910390f35b61016f610470565b005b6101796105ab565b005b34801561018757600080fd5b50610190610839565b60405161019d9190610b86565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610269576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561031457600080828154811061028e5761028d610ba1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030c90610bff565b91505061026c565b50600067ffffffffffffffff8111156103305761032f610c48565b5b60405190808252806020026020018201604052801561035e5781602001602082028036833780820191505090505b5060009080519060200190610374929190610939565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039b90610ca8565b60006040518083038185875af1925050503d80600081146103d8576040519150601f19603f3d011682016040523d82523d6000602084013e6103dd565b606091505b5050905080610421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041890610d1a565b60405180910390fd5b50565b6000818154811061043457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6802b5e3af16b18800006104af600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461085d90919063ffffffff16565b10156104f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e790610d86565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105a29190610da6565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610630576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106b357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610669575b5050505050905060005b815181101561073e5760008282815181106106db576106da610ba1565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061073690610bff565b9150506106bd565b50600067ffffffffffffffff81111561075a57610759610c48565b5b6040519080825280602002602001820160405280156107885781602001602082028036833780820191505090505b506000908051906020019061079e929190610939565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107e590610ca8565b60006040518083038185875af1925050503d8060008114610822576040519150601f19603f3d011682016040523d82523d6000602084013e610827565b606091505b505090508061083557600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061086983610899565b90506000670de0b6b3a764000085836108829190610dfc565b61088c9190610e85565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108e257600080fd5b505afa1580156108f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091a9190610f43565b5050509150506402540be400816109319190610fbe565b915050919050565b8280548282559060005260206000209081019282156109b2579160200282015b828111156109b15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610959565b5b5090506109bf91906109c3565b5090565b5b808211156109dc5760008160009055506001016109c4565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a25610a20610a1b846109e0565b610a00565b6109e0565b9050919050565b6000610a3782610a0a565b9050919050565b6000610a4982610a2c565b9050919050565b610a5981610a3e565b82525050565b6000602082019050610a746000830184610a50565b92915050565b600080fd5b6000610a8a826109e0565b9050919050565b610a9a81610a7f565b8114610aa557600080fd5b50565b600081359050610ab781610a91565b92915050565b600060208284031215610ad357610ad2610a7a565b5b6000610ae184828501610aa8565b91505092915050565b6000819050919050565b610afd81610aea565b82525050565b6000602082019050610b186000830184610af4565b92915050565b610b2781610aea565b8114610b3257600080fd5b50565b600081359050610b4481610b1e565b92915050565b600060208284031215610b6057610b5f610a7a565b5b6000610b6e84828501610b35565b91505092915050565b610b8081610a7f565b82525050565b6000602082019050610b9b6000830184610b77565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c0a82610aea565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c3d57610c3c610bd0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c92600083610c77565b9150610c9d82610c82565b600082019050919050565b6000610cb382610c85565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d04600b83610cbd565b9150610d0f82610cce565b602082019050919050565b60006020820190508181036000830152610d3381610cf7565b9050919050565b7f4d696e696d756d2076616c756520555344000000000000000000000000000000600082015250565b6000610d70601183610cbd565b9150610d7b82610d3a565b602082019050919050565b60006020820190508181036000830152610d9f81610d63565b9050919050565b6000610db182610aea565b9150610dbc83610aea565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610df157610df0610bd0565b5b828201905092915050565b6000610e0782610aea565b9150610e1283610aea565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4b57610e4a610bd0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e9082610aea565b9150610e9b83610aea565b925082610eab57610eaa610e56565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ed581610eb6565b8114610ee057600080fd5b50565b600081519050610ef281610ecc565b92915050565b6000819050919050565b610f0b81610ef8565b8114610f1657600080fd5b50565b600081519050610f2881610f02565b92915050565b600081519050610f3d81610b1e565b92915050565b600080600080600060a08688031215610f5f57610f5e610a7a565b5b6000610f6d88828901610ee3565b9550506020610f7e88828901610f19565b9450506040610f8f88828901610f2e565b9350506060610fa088828901610f2e565b9250506080610fb188828901610ee3565b9150509295509295909350565b6000610fc982610ef8565b9150610fd483610ef8565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561101357611012610bd0565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110505761104f610bd0565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561108d5761108c610bd0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110ca576110c9610bd0565b5b82820290509291505056fea264697066735822122094e82315095edfeacc2bb95301756c5bc9423b37915921c3bbfcce240b5d08c864736f6c63430008080033";

type FundMeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundMeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundMe__factory extends ContractFactory {
  constructor(...args: FundMeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    priceFeedAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(priceFeedAddress, overrides || {});
  }
  override deploy(
    priceFeedAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(priceFeedAddress, overrides || {}) as Promise<
      FundMe & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FundMe__factory {
    return super.connect(runner) as FundMe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundMeInterface {
    return new Interface(_abi) as FundMeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FundMe {
    return new Contract(address, _abi, runner) as unknown as FundMe;
  }
}
